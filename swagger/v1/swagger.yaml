---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/cars":
    get:
      summary: List of cars
      tags:
      - Cars
      responses:
        '200':
          description: successful
    post:
      summary: Create A Car
      tags:
      - Cars
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  default: McLaren
                description:
                  type: text
                  default: This is the description of McLaren
                color:
                  type: string
                  default: Green
                price:
                  type: number
                  default: '25000'
                car_type:
                  type: string
                  default: Sport
                year:
                  type: string
                  default: '2015'
                images:
                  type: array
                  default:
                  - https://images.unsplash.com/photo-1605559424843-9e4c228bf1c2?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTB8fGNhcnN8ZW58MHx8MHx8&w=1000&q=80
                  - https://mclaren.scene7.com/is/image/mclaren/DSC00052_6:crop-1x1?wid=1200&hei=1200
              required:
              - name
              - description
              - price
              - type
              - year
  "/api/v1/cars/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Specific Car using {id}
      tags:
      - Cars
      responses:
        '200':
          description: successful
    delete:
      summary: Delete a car by {id}
      tags:
      - Cars
      responses:
        '200':
          description: successful
  "/api/v1/reservations":
    get:
      summary: List all reservations for the current user
      tags:
      - Reservations
      responses:
        '200':
          description: successful
    post:
      summary: Add a new reservation
      tags:
      - Reservations
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                city:
                  type: string
                  default: Mexico City
                starting_date:
                  type: string
                  default: 07-04-2023
                ending_date:
                  type: string
                  default: 12-04-2023
                car_id:
                  type: number
                  default: '1'
              required:
              - city
              - starting_date
              - ending_date
              - car_id
  "/api/v1/reservations/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    delete:
      summary: Delete specific reservation by {id}
      tags:
      - Reservations
      responses:
        '200':
          description: successful
  "/login":
    post:
      summary: 'Create a session aka: Generate token'
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  default: wassim
              required:
              - username
  "/signup":
    post:
      summary: Create a new user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  default: wassim
              required:
              - username
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
- name: Users
  description: Operations related to users
- name: Cars
  description: Operations related to cars
- name: Reservations
  description: Operations related to reservations
security:
- bearerAuth: []
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
